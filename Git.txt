- git --version
- git config --global user.name "Your Name"
- git config --global user.email "your@email.com"
- git init   \\initializes empty git repo
- ls -a  \\views hidden files and folders
- git status
- touch index.html  \\creates new file

- How to add commit
	- git add index.html
	- git commit -m "Commit Message"

- git add <file-name>
- git add '.'  \\adds all modified files for commit 
- git log   \\ gives the history of commits, press button 'q' to exit from log mode
- git checkout <commit-hash>  \\goto particular commit
- git branch  \\lists the current branch, if branch does not exist creates new branch
- git branch -a \\lists all branches
- git branch -r \\lists feature + release branches
- git show-branch \\lists all commits in current branch
- git checkout master  \\ goto master branch
- git checkout -b master \\creates new branch if it doesn't exist
- git branch <branch-name>
- git merge <branch-name>   \\merges current branch to <branch-name>
- git restore <file-name>  \\restore back the changes being made to file

- git reset --soft HEAD~2  \\undo the last two commits
- git push origin +yourbranchname   \\replaces the remote branch with local branch. It's useful when someone suggest to make changes
  pull request. Instead of committing and creating a new pull request, add as many number of commits as you want and then replace the existing
  branch in remote with the same branch from local. It will also shows the comments made by reviewer.

- git branch -d localBranchName   \\delete branch locally
- git branch -D localBranchName  \\delete branch locally
- git push origin --delete remoteBranchName  \\delete branch remotely
- Merge 'release/dotrelease' to 'feature/mup-cbrs-inquiry'
	- git pull
	- git checkout feature/mup-cbrs-inquiry
	- git merge feature/dotrelease
	- git push

- Resolving merge conflicts (we are trying to merge release/changeLog to dev)
	- git checkout dev
	- git pull origin release/changeLog
	- Git will highlight the lines which are causing conflicts, make the necessary changes
	- commit the changes
	- git push origin +dev
	- merge the code

*Git Hub*

- Pushing and Existing Reop to GitHub
	- Add/commit your code locally
	- Go to Github and make a repo
	- Connect your local repo to the github repo (add a remote)
		git remote -v  //checks the list of added remotes
		git remote add origin https://github.com/yasirmehmood76/GithubBasicCommands.git
	- Push your code up to github using the new remote
		git push -u origin master

- Pulling an Exsiting Repo from Github
	- Connect your local repo to the github repo (add a remote)
		git remote -v
		git remote add ogirin https://github.com/yasirmehmood76/GihubBasicCommands.git
- Pull your code from github using the remote
	- git pull origin master

- Clone an Existing Repo
	- git status
	- mkdir DeepFake
	- cd DeepFake
	- git status
	- git clone https://github.com/deepfakes/faceswap.git

- Make a Contribution
	- Make a Fork Repo on Github
	- Pull Forked repo in local machine
	- Add commits
	- Push Forked repo to Github
		git push -u origin feature/JunitTesting
	- Create Pull Request

- Clone: Get a working copy of the remote repository.
- Pull: I am working on this, please get me the new changes that may be updated by others.

- git clone means you are making a copy of the repository in your system.
- git fork means you are copying the repository to your Github account.
- git pull means you are fetching the last modified repository.
- git push means you are returning the repository after modifying it.
- In layman's term: git clone is downloading and git pull is refreshing.

- Change Github/Bitbucket Password:
	- Goto Control Panel -> User Accounts -> Window Credential Managers

- Disable Git SSL verification in the server hosting
	- git config --global http.sslVerify false
